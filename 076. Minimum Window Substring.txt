class Solution {
    public String minWindow(String s, String t) {
        if (s.length() < t.length()) return "";
        
        HashMap<Character, Integer> map = new HashMap<>();
        for (char c : t.toCharArray()) {
            map.put(c, map.getOrDefault(c, 0) + 1);
        }
        int res = Integer.MAX_VALUE;
        int diff = t.length();
        int lo = 0, hi = 0;
        String result = "";
        
        char[] S = s.toCharArray();
        while (hi < S.length) {
            if (map.containsKey(S[hi]) && map.get(S[hi]) > 0) {
                diff--;    
            }
            if (map.containsKey(S[hi])) map.put(S[hi], map.get(S[hi]) - 1);
            
            
            while (diff == 0) {
                if (hi - lo + 1 < res) {
                    result = s.substring(lo, hi + 1);
                    res = result.length();
                }
                
                if (map.containsKey(S[lo]) && map.get(S[lo]) >= 0) {
                    diff++;
                }
                if (map.containsKey(S[lo])) map.put(S[lo], map.get(S[lo]) + 1);
                lo++;
            }
            hi++;
        }

        return result;
    }
}
