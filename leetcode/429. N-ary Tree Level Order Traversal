/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val,List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
    public List<List<Integer>> levelOrder(Node root) {
        List<List<Integer>> list = new ArrayList<>();
        levelOrderHelper(root, list, 0);
        return list;
    }
    
    private void levelOrderHelper(Node root, List<List<Integer>> list, int level) {
        if (root != null) {
            if (list.size() < level + 1) {
                list.add(new ArrayList<>());
            }
            list.get(level).add(root.val);
            for (Node child : root.children) {
                levelOrderHelper(child, list, level + 1);
            }
        }
    }
}
