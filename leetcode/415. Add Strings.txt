

// Good solution from Leetcode
class Solution {
    public String addStrings(String num1, String num2) {
        StringBuilder sb = new StringBuilder();
        int carry = 0;
        
        for(int i = num1.length() - 1, j = num2.length()-1; i>=0||j>=0||carry==1;i--,j--){
            int x = i < 0 ? 0 : num1.charAt(i)-'0';
            int y = j < 0 ? 0 : num2.charAt(j)-'0';
            
            sb.append((x+y+carry)%10);
            carry = (x+y+carry)/10;
        }
        
        return sb.reverse().toString();
    }
}


//----------------------------------------------------------------------------
// Own tedious solution
class Solution {
    public String addStrings(String num1, String num2) {
        char[] n1 = num1.toCharArray();
        char[] n2 = num2.toCharArray();
        if (n1.length == 0) return num2;
        if (n2.length == 0) return num1;
        int length1 = n1.length - 1;
        int length2 = n2.length - 1;
        int up = 0;
        StringBuilder res = new StringBuilder();
        while (length1 != -1 && length2 != -1) {
            int digit = (n1[length1] - '0') + (n2[length2] - '0') + up;
            if (digit >= 10) {
                up = 1;
            } else {
                up = 0;
            }
            res.insert(0, digit % 10);
            length1--;
            length2--;
        }
        if (length1 == -1 && length2 == -1) {
            if (up == 1) {
                res.insert(0, 1);
                return res.toString();
            }
            return res.toString();
        }
        if (length1 == -1) {
            while (length2 != -1) {
                int digit = (n2[length2] - '0') + up;
                if (digit >= 10) {
                    up = 1;
                } else {
                    up = 0;
                }
                res.insert(0, digit % 10);
                length2--;
            }
        } else {
            while (length1 != -1) {
                int digit = (n1[length1] - '0') + up;
                if (digit >= 10) {
                    up = 1;
                } else {
                    up = 0;
                }
                res.insert(0, digit % 10);
                length1--;
            }
        }
        
        if (up == 1) {
            res.insert(0, 1);
            return res.toString();
        }
        return res.toString();  
    }
}
