class Solution {
    boolean[][] visited;
    public boolean exist(char[][] board, String word) {
        if (word.equals("")) return false;
        visited = new boolean[board.length][board[0].length];
        boolean res = false;
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                if (board[i][j] == word.charAt(0)) {
                    res = existHelper(board, word, i, j, 0);
                }
                if (res) return res;
            }
        }
        return res;
    }
    
    public boolean existHelper(char[][] board, String word, int i, int j, int index) {
        if (index >= word.length()) {
            return true;
        }
             
        if (i < 0 || i >= board.length || j < 0 || j >= board[0].length) {
            return false;
        }
        
        if (visited[i][j]) return false;

        if (board[i][j] != word.charAt(index)) return false;
        
        visited[i][j] = true;
        
        if (existHelper(board, word, i + 1, j, index + 1) || existHelper(board, word, i - 1, j, index + 1)
            || existHelper(board, word, i, j + 1, index + 1) || existHelper(board, word, i, j - 1, index + 1)) return true;
        visited[i][j] = false;
        
        return false;
    }
}
