/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
        if (root == null) {
            return true;
        }
        
        return isSymmetric(root.left, root.right);
    }
    
    private boolean isSymmetric(TreeNode leftRoot, TreeNode rightRoot) {
        if (leftRoot == null && rightRoot == null) {
            return true;
        }
        
        // Actually the next two if loop can be simplified to a single if loop like
        // if (leftRoot == null || rightRoot == null) return false;
        if (leftRoot == null && rightRoot != null) {
            return false;
        }
        if (leftRoot != null && rightRoot == null) {
            return false;
        }
        
        
        if (leftRoot.val != rightRoot.val) {
            return false;
        }
        
        return isSymmetric(leftRoot.left, rightRoot.right) && isSymmetric(leftRoot.right, rightRoot.left);
    }
}
