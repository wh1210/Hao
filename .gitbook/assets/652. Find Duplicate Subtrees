/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public HashMap<String, Integer> count;
    public List<TreeNode> res;
    public List<TreeNode> findDuplicateSubtrees(TreeNode root) {
        count = new HashMap<>();
        res = new LinkedList<>();
        serilize(root);
        return res;
    }

    private String serilize(TreeNode root) {
        if (root == null) return "#";
        String ser = root.val + "," + serilize(root.left) + "," + serilize(root.right);
        count.put(ser, count.getOrDefault(ser, 0) + 1);
        if (count.get(ser) == 2) {
            res.add(root);
        }
        return ser;
    }
    
}
