// ----------------------------------------------

// An initial solution
class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int[] result = new int[m + n];
        
        int pointer1 = 0;
        int pointer2 = 0;
        int pointer = 0;
        
        if (n != 0 && m != 0) {
            while (pointer1 < m || pointer2 < n) {
                if (pointer1 == m) {
                    result[pointer] = nums2[pointer2];
                    pointer2++;
                    pointer++;
                } else if (pointer2 == n) {
                    result[pointer] = nums1[pointer1];
                    pointer1++;
                    pointer++;
                } else {
                    if (nums1[pointer1] < nums2[pointer2]) {
                        result[pointer] = nums1[pointer1];
                        pointer++;
                        pointer1++;
                    } else {
                        result[pointer] = nums2[pointer2];
                        pointer++;
                        pointer2++;
                    }
                }   
            }
            for (int i = 0; i < m + n; i++) {
                nums1[i] = result[i];
            }
        } else if (m == 0) {
            for (int i = 0; i < m + n; i++) {
                nums1[i] = nums2[i];
            }
        }    
    }
}


//---------------------------------------------
// Easy way! add from the backend.
class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int point1 = m - 1;
        int point2 = n - 1;
        int overall = m + n -1;
        while (point1 >= 0 && point2 >= 0) {
            if (nums1[point1] > nums2[point2]) {
                nums1[overall] = nums1[point1];
                point1--;
                overall--;
            } else {
                nums1[overall] = nums2[point2];
                point2--;
                overall--;
            }
        }
        
        while (point2 >= 0) {
            nums1[overall] = nums2[point2];
            overall--;
            point2--;
        }
    }
}
