// Two heap
class MedianFinder {
    PriorityQueue<Integer> minpq;
    PriorityQueue<Integer> maxpq;
    int size;
    /** initialize your data structure here. */
    public MedianFinder() {
        minpq = new PriorityQueue<>();
        maxpq = new PriorityQueue<>(Collections.reverseOrder());
        size = 0;
    }
    
    public void addNum(int num) {
        size++;
        maxpq.offer(num);
        minpq.offer(maxpq.poll());
        
        if (maxpq.size() < minpq.size()) {
            maxpq.offer(minpq.poll());
        }
    }
    
    public double findMedian() {
        if (size % 2 == 0) {
            return (maxpq.peek() + minpq.peek()) * 0.5;
        } else {
            return maxpq.peek();
        }
    }
}

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.addNum(num);
 * double param_2 = obj.findMedian();
 */
